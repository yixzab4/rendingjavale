<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayside.app.opinion.war.systemmessage.dao.SystemmessageMapper" >
  <resultMap id="BaseResultMap" type="com.bayside.app.opinion.war.systemmessage.model.Systemmessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="VARCHAR" />
    <result column="articleid" property="articleid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="orgname" property="orgname" jdbcType="VARCHAR" />
    <result column="parentid" property="parentid" jdbcType="VARCHAR" />
   
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, content, time, userid, url, tag, mid, articleid, type, orgname, parentid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage">
    select 
    <include refid="Base_Column_List" />
    from bs_system_message
    where (userid = #{userid,jdbcType=VARCHAR} or parentid = #{userid,jdbcType=VARCHAR})
    <if test="tag != null" >
    and tag = #{tag,jdbcType=INTEGER} 
    </if>
    <if test="type != null" >
    and type = #{type,jdbcType=INTEGER} 
    </if>
    <if test="status != null" >
    and type != '2'
    </if>
     <if test="warning != null" >
    and type != '4'
    </if>
    order by time desc limit #{start},#{size}
  </select>
   <select id="selectMessageTotal" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage">
    select 
     count(id) total
    from bs_system_message
    where (userid = #{userid,jdbcType=VARCHAR} or parentid = #{userid,jdbcType=VARCHAR})
    <if test="tag != null" >
    and tag = #{tag,jdbcType=INTEGER} 
    </if>
    <if test="type != null" >
    and type = #{type,jdbcType=INTEGER} 
    </if>
    <if test="status != null" >
    and type != '2'
    </if>
     <if test="warning != null" >
    and type != '4'
    </if>
    
  </select>
   <select id="selectMessageNum" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage">
    select 
    count(id) id
    from bs_system_message
    where 1=1
    and (userid = #{userid,jdbcType=VARCHAR} or parentid = #{userid,jdbcType=VARCHAR})
    <if test="tag != null" >
    and tag = #{tag,jdbcType=INTEGER} 
    </if>
    order by time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bs_system_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
   <delete id="deleteMessageByMid" parameterType="java.lang.String" >
    delete from bs_system_message
    where mid = #{mid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage" >
    insert into bs_system_message (id, title, content, 
      time, userid, url, tag, mid, articleid, type)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{userid,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{tag,jdbcType=INTEGER}, #{mid,jdbcType=VARCHAR}, #{articleid,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="batchinsertInfo" parameterType="java.util.List">
    insert into bs_system_message (id, title, 
      time, userid, url, tag, mid, articleid, type,orgname)
    values
     <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.id},#{item.title},#{item.time},#{item.userid},#{item.url},#{item.tag},#{item.mid},#{item.articleid},#{item.type},#{item.orgname})  
    </foreach> 
  </insert>
  <insert id="insertSelective" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage" >
    insert into bs_system_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="articleid != null" >
        articleid,
      </if>
      <if test="type != null" >
        type,
      </if>
     <if test="orgname != null" >
        orgname,
      </if>
       <if test="parentid != null" >
        parentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=VARCHAR},
      </if>
       <if test="articleid!= null" >
        #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="type!= null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="orgname!= null" >
        #{orgname,jdbcType=VARCHAR},
      </if>
      <if test="parentid!= null" >
        #{parentid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage" >
    update bs_system_message
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
       <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=VARCHAR},
      </if>
      <if test="articleid != null" >
        articleid = #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
     
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage" >
    update bs_system_message
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateYuqingMessage" parameterType="com.bayside.app.opinion.war.systemmessage.model.Systemmessage" >
    update bs_system_message
    set 
      tag = #{tag,jdbcType=INTEGER}
    where 1=1 and (id = #{id,jdbcType=VARCHAR} or parentid = #{id,jdbcType=VARCHAR})
  </update>
   <update id="updateSystemMessage" parameterType="com.bayside.app.opinion.war.systemmessage.bo.SystemMessageBo" >
    update bs_system_message
    set tag = #{tag,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=VARCHAR} and id in 
    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">  
       #{ids[${index}]}
    </foreach> 
  </update>
</mapper>