<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayside.app.opinion.war.systemset.dao.EmailconfigMapper" >
  <resultMap id="BaseResultMap" type="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
     <result column="openid" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, userid, type, openid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bs_emailconfig
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectEmailByUser" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    select 
    <include refid="Base_Column_List" />
    from bs_emailconfig
    where userid = #{userid,jdbcType=VARCHAR} and type = #{type,jdbcType=INTEGER}
  </select>
  <select id="selectEmailByOpenid" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    select 
    <include refid="Base_Column_List" />
    from bs_emailconfig
    where openid = #{openid,jdbcType=VARCHAR} 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    delete from bs_emailconfig
    where email = #{email,jdbcType=VARCHAR} and type = #{type,jdbcType = INTEGER} and userid = #{userid}
  </delete>
  <insert id="insert" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    insert into bs_emailconfig (id, email, userid, type
      )
    values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    insert into bs_emailconfig
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="type != null" >
        type,
      </if>
       <if test="openid != null" >
        openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
       <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    update bs_emailconfig
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    update bs_emailconfig
    set email = #{email,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectAllEmailconfig" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    select 
    <include refid="Base_Column_List" />
    from bs_emailconfig
    where userid = #{userid,jdbcType=VARCHAR}
    <if test="type !=null">
      and type = #{type,jdbcType=INTEGER}
    </if>
  </select>
   <select id="selectEmailByEmail" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    select 
    <include refid="Base_Column_List" />
    from bs_emailconfig
    where email = #{email,jdbcType=VARCHAR} and type = #{type,jdbcType = INTEGER} and userid = #{userid,jdbcType = VARCHAR}
  </select>
   <select id="selectAllConfig" resultMap="BaseResultMap" parameterType="com.bayside.app.opinion.war.systemset.model.Emailconfig" >
    select 
    <include refid="Base_Column_List" />
    from bs_emailconfig
    where userid = #{userid,jdbcType=VARCHAR} and type !=1 
  </select>
</mapper>