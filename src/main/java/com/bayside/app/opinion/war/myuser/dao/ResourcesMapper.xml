<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayside.app.opinion.war.myuser.dao.ResourcesMapper" >
  <resultMap id="BaseResultMap" type="com.bayside.app.opinion.war.myuser.model.Resources" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="INTEGER" />
    <result column="resKey" property="reskey" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="resUrl" property="resurl" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, parentId, resKey, type, resUrl, level, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from resources
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from resources
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bayside.app.opinion.war.myuser.model.Resources" >
    insert into resources (id, name, parentId, 
      resKey, type, resUrl, 
      level, description)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{reskey,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{resurl,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bayside.app.opinion.war.myuser.model.Resources" >
    insert into resources
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="reskey != null" >
        resKey,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="resurl != null" >
        resUrl,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="reskey != null" >
        #{reskey,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="resurl != null" >
        #{resurl,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayside.app.opinion.war.myuser.model.Resources" >
    update resources
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="reskey != null" >
        resKey = #{reskey,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="resurl != null" >
        resUrl = #{resurl,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayside.app.opinion.war.myuser.model.Resources" >
    update resources
    set name = #{name,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=INTEGER},
      resKey = #{reskey,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      resUrl = #{resurl,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getUserResources" parameterType="String" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		FROM resources WHERE id in(
		SELECT resc_id FROM
		resources_role WHERE role_id in(
		SELECT role_id FROM user_role 
		WHERE user_id=#{userid}))
	</select>
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from resources order By level asc
	</select>
</mapper>